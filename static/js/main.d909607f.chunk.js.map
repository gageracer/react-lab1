{"version":3,"sources":["logo.svg","components/NavBar/NavBar.tsx","components/Tabs/Home/Home.tsx","components/Tabs/About/About.tsx","components/Tabs/Projects/Projects.tsx","components/Tabs/Contact/Contact.tsx","components/Footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","count","message","currentCounter","_this2","timer","setInterval","clearInterval","setState","react_default","a","createElement","className","href","React","Component","Home","id","src","logo","alt","Footer","App","react","NavBar_NavBar","Home_Home","About_Home","Projects_Home","Contact_Home","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d909607f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './navbar.css';\n\ntype MyProps = {\n    message: number;\n}\n\ntype MyState = {\n    count: number;\n}\n\nexport default class NavBar extends React.Component<MyProps,MyState> {\n\n    constructor(props:any){\n        super(props)\n    }\n    state: MyState = {\n        count: this.props.message,\n    };\n        // private rootStore: any;\n    // private chatStore: any;\n    // private authStore: any;\n    // private chatTextInput: any = null;\n    // private sendText: string;\n    // constructor(props: any) {\n    //     super(props);\n    //     this.state = {\n    //         openchatDetail: false,\n    //         modal: false,\n    //         openNewWindow: false,\n    //         text: \"\",\n    //         textInPreview: \"\",\n    //         file: null,\n    //         isShowTagpanel: false,\n    //         isShowBar: false,\n    //         isShowPreview: false,\n    //         isShowRanking: false,\n    //         loadEnded: false,\n    //         showEalierMsg: true,\n    //         arrPhoto: [],\n    //         colorTheme: true, // true for dark theme\n    //         starredList: [],\n    //     }\n    //     this.handleChange = this.handleChange.bind(this);\n    //     this.rootStore = this.props.rootStore;\n    //     this.chatStore = this.rootStore.chatStore;\n    //     this.authStore = this.rootStore.authStore;\n    //     this.chatTextInput = React.createRef();\n    //     this.sendText = \"\";\n    // }\n    \n    componentDidMount() {\n        let currentCounter:number;\n        let timer = setInterval(() => {\n            currentCounter = this.state.count;\n            if (currentCounter === 1) {\n                clearInterval(timer);\n            }\n            this.setState({ count: currentCounter - 1 });\n        }, 1000);\n    }\n\n    render(){\n        \n        return(\n            <div className=\"nav\">\n                <a href=\"#home\" className=\"navLink\"> Home</a>\n                <a href=\"#about\"> About</a>\n                <a href=\"#projects\"> Projects</a>\n                <a href=\"#contact\"> Contact</a>\n                <div>{this.state.count}</div>\n            </div>\n        )\n    };\n    \n}\n","import React from 'react';\nimport './home.css';\nimport logo from '../../../../src/logo.svg';\n\n\nexport default class Home extends React.Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n\n        return (\n            <div id=\"home\">\n\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n            </div>\n        )\n    };\n\n}\n","import React from 'react';\nimport logo from '../../../../src/logo.svg';\n\n\nexport default class Home extends React.Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n\n        return (\n            <div id=\"about\">\n\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n\n            </div>\n        )\n    };\n\n}\n","import React from 'react';\n\nimport logo from '../../../../src/logo.svg';\n\n\nexport default class Home extends React.Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n\n        return (\n            <div id=\"projects\">\n\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n\n            </div>\n        )\n    };\n\n}\n","import React from 'react';\n\nimport logo from '../../../../src/logo.svg';\n\n\nexport default class Home extends React.Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n\n        return (\n            <div id=\"contact\">\n\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n\n            </div>\n        )\n    };\n\n}\n","import React from 'react';\nimport './footer.css';\n\ntype MyProps = {\n    message: string;\n}\n\ntype MyState = {\n    count: string;\n}\n\nexport default class Footer extends React.Component<MyProps, MyState> {\n\n    constructor(props: any) {\n        super(props)\n    }\n    state: MyState = {\n        count: this.props.message,\n    };\n    // private rootStore: any;\n    // private chatStore: any;\n    // private authStore: any;\n    // private chatTextInput: any = null;\n    // private sendText: string;\n    // constructor(props: any) {\n    //     super(props);\n    //     this.state = {\n    //         openchatDetail: false,\n    //         modal: false,\n    //         openNewWindow: false,\n    //         text: \"\",\n    //         textInPreview: \"\",\n    //         file: null,\n    //         isShowTagpanel: false,\n    //         isShowBar: false,\n    //         isShowPreview: false,\n    //         isShowRanking: false,\n    //         loadEnded: false,\n    //         showEalierMsg: true,\n    //         arrPhoto: [],\n    //         colorTheme: true, // true for dark theme\n    //         starredList: [],\n    //     }\n    //     this.handleChange = this.handleChange.bind(this);\n    //     this.rootStore = this.props.rootStore;\n    //     this.chatStore = this.rootStore.chatStore;\n    //     this.authStore = this.rootStore.authStore;\n    //     this.chatTextInput = React.createRef();\n    //     this.sendText = \"\";\n    // }\n\n    // componentDidMount() {\n    //     let currentCounter: number;\n    //     let timer = setInterval(() => {\n    //         currentCounter = this.state.count;\n    //         if (currentCounter === 1) {\n    //             clearInterval(timer);\n    //         }\n    //         this.setState({ count: currentCounter - 1 });\n    //     }, 1000);\n    // }\n\n    render() {\n\n        return (\n            <div className=\"footer\">\n                <div>{this.state.count}</div>\n            </div>\n        )\n    };\n\n}\n","import * as React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Home from \"./components/Tabs/Home/Home\";\nimport About from \"./components/Tabs/About/About\";\nimport Projects from \"./components/Tabs/Projects/Projects\";\nimport Contact from \"./components/Tabs/Contact/Contact\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <NavBar message={31}/>\n      <Home/>\n      <About/>\n      <Projects/>\n      <Contact/>\n      <Footer message={\"This is an example react project for the class lab. It can be used in any way.2019\"}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}